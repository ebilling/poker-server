// Code generated by protoc-gen-go. DO NOT EDIT.
// source: poker.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Suit int32

const (
	Suit_ANY          Suit = 0
	Suit_HEART        Suit = 1
	Suit_SPADE        Suit = 2
	Suit_DIAMOND      Suit = 3
	Suit_CLUB         Suit = 4
	Suit_INVALID_SUIT Suit = 99
)

var Suit_name = map[int32]string{
	0:  "ANY",
	1:  "HEART",
	2:  "SPADE",
	3:  "DIAMOND",
	4:  "CLUB",
	99: "INVALID_SUIT",
}

var Suit_value = map[string]int32{
	"ANY":          0,
	"HEART":        1,
	"SPADE":        2,
	"DIAMOND":      3,
	"CLUB":         4,
	"INVALID_SUIT": 99,
}

func (x Suit) String() string {
	return proto.EnumName(Suit_name, int32(x))
}

func (Suit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{0}
}

type CardValue int32

const (
	CardValue_JOKER        CardValue = 0
	CardValue_ACE          CardValue = 1
	CardValue_TWO          CardValue = 2
	CardValue_THREE        CardValue = 3
	CardValue_FOUR         CardValue = 4
	CardValue_FIVE         CardValue = 5
	CardValue_SIX          CardValue = 6
	CardValue_SEVEN        CardValue = 7
	CardValue_EIGHT        CardValue = 8
	CardValue_NINE         CardValue = 9
	CardValue_TEN          CardValue = 10
	CardValue_JACK         CardValue = 11
	CardValue_QUEEN        CardValue = 12
	CardValue_KING         CardValue = 13
	CardValue_INVALID_CARD CardValue = 99
)

var CardValue_name = map[int32]string{
	0:  "JOKER",
	1:  "ACE",
	2:  "TWO",
	3:  "THREE",
	4:  "FOUR",
	5:  "FIVE",
	6:  "SIX",
	7:  "SEVEN",
	8:  "EIGHT",
	9:  "NINE",
	10: "TEN",
	11: "JACK",
	12: "QUEEN",
	13: "KING",
	99: "INVALID_CARD",
}

var CardValue_value = map[string]int32{
	"JOKER":        0,
	"ACE":          1,
	"TWO":          2,
	"THREE":        3,
	"FOUR":         4,
	"FIVE":         5,
	"SIX":          6,
	"SEVEN":        7,
	"EIGHT":        8,
	"NINE":         9,
	"TEN":          10,
	"JACK":         11,
	"QUEEN":        12,
	"KING":         13,
	"INVALID_CARD": 99,
}

func (x CardValue) String() string {
	return proto.EnumName(CardValue_name, int32(x))
}

func (CardValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{1}
}

type Action int32

const (
	Action_CHECK Action = 0
	Action_CALL  Action = 1
	Action_RAISE Action = 2
	Action_FOLD  Action = 3
)

var Action_name = map[int32]string{
	0: "CHECK",
	1: "CALL",
	2: "RAISE",
	3: "FOLD",
}

var Action_value = map[string]int32{
	"CHECK": 0,
	"CALL":  1,
	"RAISE": 2,
	"FOLD":  3,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}

func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{2}
}

type PlayingStatus int32

const (
	PlayingStatus_WAITING PlayingStatus = 0
	PlayingStatus_PLAYING PlayingStatus = 1
	PlayingStatus_LOST    PlayingStatus = 2
)

var PlayingStatus_name = map[int32]string{
	0: "WAITING",
	1: "PLAYING",
	2: "LOST",
}

var PlayingStatus_value = map[string]int32{
	"WAITING": 0,
	"PLAYING": 1,
	"LOST":    2,
}

func (x PlayingStatus) String() string {
	return proto.EnumName(PlayingStatus_name, int32(x))
}

func (PlayingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{3}
}

type Card struct {
	Value                CardValue `protobuf:"varint,1,opt,name=value,proto3,enum=auth.CardValue" json:"value,omitempty"`
	Suit                 Suit      `protobuf:"varint,2,opt,name=suit,proto3,enum=auth.Suit" json:"suit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{0}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetValue() CardValue {
	if m != nil {
		return m.Value
	}
	return CardValue_JOKER
}

func (m *Card) GetSuit() Suit {
	if m != nil {
		return m.Suit
	}
	return Suit_ANY
}

type BasicResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasicResponse) Reset()         { *m = BasicResponse{} }
func (m *BasicResponse) String() string { return proto.CompactTextString(m) }
func (*BasicResponse) ProtoMessage()    {}
func (*BasicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{1}
}

func (m *BasicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicResponse.Unmarshal(m, b)
}
func (m *BasicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicResponse.Marshal(b, m, deterministic)
}
func (m *BasicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicResponse.Merge(m, src)
}
func (m *BasicResponse) XXX_Size() int {
	return xxx_messageInfo_BasicResponse.Size(m)
}
func (m *BasicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BasicResponse proto.InternalMessageInfo

func (m *BasicResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BasicResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Player struct {
	DispalyName          string   `protobuf:"bytes,1,opt,name=dispaly_name,json=dispalyName,proto3" json:"dispaly_name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{2}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetDispalyName() string {
	if m != nil {
		return m.DispalyName
	}
	return ""
}

func (m *Player) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ConnectRequest struct {
	User                 *Player  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	GameId               string   `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{3}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetUser() *Player {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ConnectRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type ConnectResponse struct {
	Value                *BasicResponse `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	AuthToken            string         `protobuf:"bytes,2,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{4}
}

func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetValue() *BasicResponse {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ConnectResponse) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

type Play struct {
	GameId               string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Player               *Player  `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	Action               Action   `protobuf:"varint,3,opt,name=action,proto3,enum=auth.Action" json:"action,omitempty"`
	Ammount              int32    `protobuf:"varint,4,opt,name=ammount,proto3" json:"ammount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Play) Reset()         { *m = Play{} }
func (m *Play) String() string { return proto.CompactTextString(m) }
func (*Play) ProtoMessage()    {}
func (*Play) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{5}
}

func (m *Play) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Play.Unmarshal(m, b)
}
func (m *Play) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Play.Marshal(b, m, deterministic)
}
func (m *Play) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Play.Merge(m, src)
}
func (m *Play) XXX_Size() int {
	return xxx_messageInfo_Play.Size(m)
}
func (m *Play) XXX_DiscardUnknown() {
	xxx_messageInfo_Play.DiscardUnknown(m)
}

var xxx_messageInfo_Play proto.InternalMessageInfo

func (m *Play) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *Play) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

func (m *Play) GetAction() Action {
	if m != nil {
		return m.Action
	}
	return Action_CHECK
}

func (m *Play) GetAmmount() int32 {
	if m != nil {
		return m.Ammount
	}
	return 0
}

type PlayResponse struct {
	Status               *TableStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PlayerCards          []int32      `protobuf:"varint,2,rep,packed,name=player_cards,json=playerCards,proto3" json:"player_cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PlayResponse) Reset()         { *m = PlayResponse{} }
func (m *PlayResponse) String() string { return proto.CompactTextString(m) }
func (*PlayResponse) ProtoMessage()    {}
func (*PlayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{6}
}

func (m *PlayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayResponse.Unmarshal(m, b)
}
func (m *PlayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayResponse.Marshal(b, m, deterministic)
}
func (m *PlayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayResponse.Merge(m, src)
}
func (m *PlayResponse) XXX_Size() int {
	return xxx_messageInfo_PlayResponse.Size(m)
}
func (m *PlayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayResponse proto.InternalMessageInfo

func (m *PlayResponse) GetStatus() *TableStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PlayResponse) GetPlayerCards() []int32 {
	if m != nil {
		return m.PlayerCards
	}
	return nil
}

type PublicPlayerStatus struct {
	Seat int32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	// negative number indicates lost
	StackSize            int32    `protobuf:"varint,2,opt,name=stack_size,json=stackSize,proto3" json:"stack_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicPlayerStatus) Reset()         { *m = PublicPlayerStatus{} }
func (m *PublicPlayerStatus) String() string { return proto.CompactTextString(m) }
func (*PublicPlayerStatus) ProtoMessage()    {}
func (*PublicPlayerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{7}
}

func (m *PublicPlayerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicPlayerStatus.Unmarshal(m, b)
}
func (m *PublicPlayerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicPlayerStatus.Marshal(b, m, deterministic)
}
func (m *PublicPlayerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicPlayerStatus.Merge(m, src)
}
func (m *PublicPlayerStatus) XXX_Size() int {
	return xxx_messageInfo_PublicPlayerStatus.Size(m)
}
func (m *PublicPlayerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicPlayerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PublicPlayerStatus proto.InternalMessageInfo

func (m *PublicPlayerStatus) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *PublicPlayerStatus) GetStackSize() int32 {
	if m != nil {
		return m.StackSize
	}
	return 0
}

type TableStatus struct {
	Timestamp            *timestamp.Timestamp  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DealerPosition       int32                 `protobuf:"varint,2,opt,name=dealer_position,json=dealerPosition,proto3" json:"dealer_position,omitempty"`
	ActionPosition       int32                 `protobuf:"varint,3,opt,name=action_position,json=actionPosition,proto3" json:"action_position,omitempty"`
	Players              []*PublicPlayerStatus `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	SharedCards          []int32               `protobuf:"varint,5,rep,packed,name=shared_cards,json=sharedCards,proto3" json:"shared_cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TableStatus) Reset()         { *m = TableStatus{} }
func (m *TableStatus) String() string { return proto.CompactTextString(m) }
func (*TableStatus) ProtoMessage()    {}
func (*TableStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{8}
}

func (m *TableStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableStatus.Unmarshal(m, b)
}
func (m *TableStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableStatus.Marshal(b, m, deterministic)
}
func (m *TableStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableStatus.Merge(m, src)
}
func (m *TableStatus) XXX_Size() int {
	return xxx_messageInfo_TableStatus.Size(m)
}
func (m *TableStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TableStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TableStatus proto.InternalMessageInfo

func (m *TableStatus) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *TableStatus) GetDealerPosition() int32 {
	if m != nil {
		return m.DealerPosition
	}
	return 0
}

func (m *TableStatus) GetActionPosition() int32 {
	if m != nil {
		return m.ActionPosition
	}
	return 0
}

func (m *TableStatus) GetPlayers() []*PublicPlayerStatus {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *TableStatus) GetSharedCards() []int32 {
	if m != nil {
		return m.SharedCards
	}
	return nil
}

type TournamentStatus struct {
	Tables               []*TableStatus        `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	LeaderBoard          []*PublicPlayerStatus `protobuf:"bytes,2,rep,name=leader_board,json=leaderBoard,proto3" json:"leader_board,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TournamentStatus) Reset()         { *m = TournamentStatus{} }
func (m *TournamentStatus) String() string { return proto.CompactTextString(m) }
func (*TournamentStatus) ProtoMessage()    {}
func (*TournamentStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{9}
}

func (m *TournamentStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TournamentStatus.Unmarshal(m, b)
}
func (m *TournamentStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TournamentStatus.Marshal(b, m, deterministic)
}
func (m *TournamentStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TournamentStatus.Merge(m, src)
}
func (m *TournamentStatus) XXX_Size() int {
	return xxx_messageInfo_TournamentStatus.Size(m)
}
func (m *TournamentStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TournamentStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TournamentStatus proto.InternalMessageInfo

func (m *TournamentStatus) GetTables() []*TableStatus {
	if m != nil {
		return m.Tables
	}
	return nil
}

func (m *TournamentStatus) GetLeaderBoard() []*PublicPlayerStatus {
	if m != nil {
		return m.LeaderBoard
	}
	return nil
}

type TournamentStatusResponse struct {
	Status               *TournamentStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TournamentStatusResponse) Reset()         { *m = TournamentStatusResponse{} }
func (m *TournamentStatusResponse) String() string { return proto.CompactTextString(m) }
func (*TournamentStatusResponse) ProtoMessage()    {}
func (*TournamentStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{10}
}

func (m *TournamentStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TournamentStatusResponse.Unmarshal(m, b)
}
func (m *TournamentStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TournamentStatusResponse.Marshal(b, m, deterministic)
}
func (m *TournamentStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TournamentStatusResponse.Merge(m, src)
}
func (m *TournamentStatusResponse) XXX_Size() int {
	return xxx_messageInfo_TournamentStatusResponse.Size(m)
}
func (m *TournamentStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TournamentStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TournamentStatusResponse proto.InternalMessageInfo

func (m *TournamentStatusResponse) GetStatus() *TournamentStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type TournamentStatusRequest struct {
	Player               *Player  `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	GameId               string   `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TournamentStatusRequest) Reset()         { *m = TournamentStatusRequest{} }
func (m *TournamentStatusRequest) String() string { return proto.CompactTextString(m) }
func (*TournamentStatusRequest) ProtoMessage()    {}
func (*TournamentStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_507d94a3e2f11051, []int{11}
}

func (m *TournamentStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TournamentStatusRequest.Unmarshal(m, b)
}
func (m *TournamentStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TournamentStatusRequest.Marshal(b, m, deterministic)
}
func (m *TournamentStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TournamentStatusRequest.Merge(m, src)
}
func (m *TournamentStatusRequest) XXX_Size() int {
	return xxx_messageInfo_TournamentStatusRequest.Size(m)
}
func (m *TournamentStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TournamentStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TournamentStatusRequest proto.InternalMessageInfo

func (m *TournamentStatusRequest) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

func (m *TournamentStatusRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func init() {
	proto.RegisterEnum("auth.Suit", Suit_name, Suit_value)
	proto.RegisterEnum("auth.CardValue", CardValue_name, CardValue_value)
	proto.RegisterEnum("auth.Action", Action_name, Action_value)
	proto.RegisterEnum("auth.PlayingStatus", PlayingStatus_name, PlayingStatus_value)
	proto.RegisterType((*Card)(nil), "auth.Card")
	proto.RegisterType((*BasicResponse)(nil), "auth.BasicResponse")
	proto.RegisterType((*Player)(nil), "auth.Player")
	proto.RegisterType((*ConnectRequest)(nil), "auth.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "auth.ConnectResponse")
	proto.RegisterType((*Play)(nil), "auth.Play")
	proto.RegisterType((*PlayResponse)(nil), "auth.PlayResponse")
	proto.RegisterType((*PublicPlayerStatus)(nil), "auth.PublicPlayerStatus")
	proto.RegisterType((*TableStatus)(nil), "auth.TableStatus")
	proto.RegisterType((*TournamentStatus)(nil), "auth.TournamentStatus")
	proto.RegisterType((*TournamentStatusResponse)(nil), "auth.TournamentStatusResponse")
	proto.RegisterType((*TournamentStatusRequest)(nil), "auth.TournamentStatusRequest")
}

func init() { proto.RegisterFile("poker.proto", fileDescriptor_507d94a3e2f11051) }

var fileDescriptor_507d94a3e2f11051 = []byte{
	// 953 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x55, 0xeb, 0x4e, 0xe3, 0x46,
	0x14, 0xc6, 0xc4, 0x49, 0xc8, 0x71, 0x80, 0xe9, 0x74, 0xdb, 0x8d, 0x50, 0x77, 0x4b, 0xdd, 0xae,
	0xca, 0x22, 0x35, 0x48, 0x59, 0xa9, 0xaa, 0xd4, 0x1f, 0x95, 0x49, 0x5c, 0x30, 0x04, 0x93, 0x9d,
	0x18, 0xf6, 0xa2, 0x4a, 0xd1, 0xc4, 0x99, 0x06, 0x0b, 0x5f, 0x52, 0x8f, 0x8d, 0xb4, 0xfc, 0xef,
	0xcb, 0xf4, 0x39, 0xfa, 0x40, 0x7d, 0x84, 0x6a, 0x2e, 0xb9, 0x6c, 0x58, 0xf6, 0xdf, 0xcc, 0x77,
	0xbe, 0xf9, 0xce, 0xd5, 0xc7, 0x60, 0xcd, 0xb2, 0x5b, 0x96, 0xb7, 0x67, 0x79, 0x56, 0x64, 0xd8,
	0xa4, 0x65, 0x71, 0xb3, 0xf7, 0xed, 0x34, 0xcb, 0xa6, 0x31, 0x3b, 0x92, 0xd8, 0xb8, 0xfc, 0xf3,
	0xa8, 0x88, 0x12, 0xc6, 0x0b, 0x9a, 0xcc, 0x14, 0xcd, 0xbe, 0x00, 0xb3, 0x4b, 0xf3, 0x09, 0x7e,
	0x01, 0xd5, 0x3b, 0x1a, 0x97, 0xac, 0x65, 0xec, 0x1b, 0x07, 0x3b, 0x9d, 0xdd, 0xb6, 0x78, 0xde,
	0x16, 0xa6, 0x6b, 0x01, 0x13, 0x65, 0xc5, 0xcf, 0xc1, 0xe4, 0x65, 0x54, 0xb4, 0x36, 0x25, 0x0b,
	0x14, 0x6b, 0x58, 0x46, 0x05, 0x91, 0xb8, 0xfd, 0x1b, 0x6c, 0x1f, 0x53, 0x1e, 0x85, 0x84, 0xf1,
	0x59, 0x96, 0x72, 0x86, 0x5b, 0x50, 0x4f, 0x18, 0xe7, 0x74, 0xaa, 0x94, 0x1b, 0x64, 0x7e, 0xc5,
	0x4f, 0xa0, 0xca, 0xf2, 0x3c, 0xcb, 0xa5, 0x56, 0x83, 0xa8, 0x8b, 0xed, 0x40, 0x6d, 0x10, 0xd3,
	0x0f, 0x2c, 0xc7, 0xdf, 0x41, 0x73, 0x12, 0xf1, 0x19, 0x8d, 0x3f, 0x8c, 0x52, 0x9a, 0xcc, 0x9f,
	0x5b, 0x1a, 0xf3, 0x69, 0xa2, 0x24, 0x12, 0x1a, 0xc5, 0x0b, 0x09, 0x71, 0xb1, 0xcf, 0x61, 0xa7,
	0x9b, 0xa5, 0x29, 0x0b, 0x0b, 0xc2, 0xfe, 0x2a, 0x19, 0x2f, 0xf0, 0x3e, 0x98, 0x25, 0x67, 0xb9,
	0x94, 0xb0, 0x3a, 0x4d, 0x15, 0xb5, 0x72, 0x43, 0xa4, 0x05, 0x3f, 0x85, 0xfa, 0x94, 0x26, 0x6c,
	0x14, 0x4d, 0xb4, 0x56, 0x4d, 0x5c, 0xbd, 0x89, 0xfd, 0x1e, 0x76, 0x17, 0x62, 0x3a, 0xa5, 0x97,
	0xab, 0xa5, 0xb2, 0x3a, 0x5f, 0x2a, 0xb9, 0x8f, 0xd2, 0x9e, 0x97, 0xeb, 0x1b, 0x68, 0x38, 0x65,
	0x71, 0x13, 0x64, 0xb7, 0x2c, 0xd5, 0xc2, 0x4b, 0xc0, 0xfe, 0xdb, 0x00, 0x53, 0x44, 0xb1, 0xea,
	0xdd, 0x58, 0xf5, 0x8e, 0x7f, 0x80, 0xda, 0x4c, 0x86, 0x29, 0x1f, 0xaf, 0x87, 0xae, 0x6d, 0x82,
	0x45, 0xc3, 0x22, 0xca, 0xd2, 0x56, 0x45, 0xb6, 0x45, 0xb3, 0x1c, 0x89, 0x11, 0x6d, 0x13, 0x9d,
	0xa0, 0x49, 0x92, 0x95, 0x69, 0xd1, 0x32, 0xf7, 0x8d, 0x83, 0x2a, 0x99, 0x5f, 0xed, 0x3f, 0xa0,
	0x29, 0x14, 0x57, 0x12, 0xac, 0xf1, 0x82, 0x16, 0x25, 0xd7, 0x19, 0x7e, 0xa1, 0xf4, 0x02, 0x3a,
	0x8e, 0xd9, 0x50, 0x1a, 0x88, 0x26, 0x88, 0x26, 0xa9, 0x20, 0x46, 0x21, 0xcd, 0x27, 0xbc, 0xb5,
	0xb9, 0x5f, 0x39, 0xa8, 0x12, 0x4b, 0x61, 0x62, 0x7a, 0xb8, 0x7d, 0x02, 0x78, 0x50, 0x8e, 0xe3,
	0x28, 0x54, 0x51, 0x2b, 0x01, 0x8c, 0xc1, 0xe4, 0x8c, 0x16, 0xd2, 0x43, 0x95, 0xc8, 0x33, 0x7e,
	0x06, 0xc0, 0x0b, 0x1a, 0xde, 0x8e, 0x78, 0x74, 0xcf, 0x64, 0xc6, 0x55, 0xd2, 0x90, 0xc8, 0x30,
	0xba, 0x67, 0xf6, 0x7f, 0x06, 0x58, 0x2b, 0x31, 0xe0, 0x5f, 0xa0, 0xb1, 0x98, 0x66, 0x1d, 0xe9,
	0x5e, 0x5b, 0xcd, 0x7b, 0x7b, 0x3e, 0xef, 0xed, 0x60, 0xce, 0x20, 0x4b, 0x32, 0xfe, 0x11, 0x76,
	0x27, 0x8c, 0xc6, 0x2c, 0x1f, 0xcd, 0x32, 0x1e, 0xc9, 0xca, 0x29, 0x6f, 0x3b, 0x0a, 0x1e, 0x68,
	0x54, 0x10, 0x55, 0xf5, 0x96, 0xc4, 0x8a, 0x22, 0x2a, 0x78, 0x41, 0xec, 0x40, 0x5d, 0xe5, 0xcc,
	0x5b, 0xe6, 0x7e, 0xe5, 0xc0, 0xea, 0xb4, 0x74, 0xa7, 0x1e, 0x64, 0x4e, 0xe6, 0x44, 0x51, 0x3b,
	0x7e, 0x43, 0x73, 0x36, 0xd1, 0xb5, 0xab, 0xaa, 0xda, 0x29, 0x4c, 0xd5, 0xee, 0x1e, 0x50, 0x90,
	0x95, 0xb9, 0x98, 0xff, 0xb4, 0xd0, 0x69, 0xbf, 0x84, 0x5a, 0x21, 0xaa, 0x20, 0xba, 0x53, 0x79,
	0xa4, 0x3b, 0x8a, 0x80, 0x7f, 0x85, 0x66, 0xcc, 0xe8, 0x84, 0xe5, 0xa3, 0x71, 0x46, 0xf3, 0x89,
	0xec, 0xce, 0xe7, 0x42, 0xb3, 0x14, 0xfb, 0x58, 0x90, 0xed, 0x33, 0x68, 0xad, 0xfb, 0x5e, 0x4c,
	0x48, 0x7b, 0x6d, 0x42, 0xbe, 0xd6, 0x31, 0xac, 0xf3, 0x35, 0xcb, 0x7e, 0x0b, 0x4f, 0x1f, 0x6a,
	0xa9, 0x6f, 0x73, 0x39, 0xe2, 0xc6, 0x67, 0x46, 0xfc, 0xb1, 0xef, 0xf3, 0xd0, 0x07, 0x53, 0xac,
	0x1f, 0x5c, 0x87, 0x8a, 0xe3, 0xbf, 0x43, 0x1b, 0xb8, 0x01, 0xd5, 0x53, 0xd7, 0x21, 0x01, 0x32,
	0xc4, 0x71, 0x38, 0x70, 0x7a, 0x2e, 0xda, 0xc4, 0x16, 0xd4, 0x7b, 0x9e, 0x73, 0x71, 0xe9, 0xf7,
	0x50, 0x05, 0x6f, 0x81, 0xd9, 0xed, 0x5f, 0x1d, 0x23, 0x13, 0x23, 0x68, 0x7a, 0xfe, 0xb5, 0xd3,
	0xf7, 0x7a, 0xa3, 0xe1, 0x95, 0x17, 0xa0, 0xf0, 0xf0, 0x1f, 0x03, 0x1a, 0x8b, 0xad, 0x27, 0x14,
	0xce, 0x2e, 0xcf, 0x5d, 0x82, 0x36, 0xa4, 0x83, 0xae, 0x8b, 0x0c, 0x71, 0x08, 0xde, 0x5c, 0xa2,
	0x4d, 0x61, 0x0c, 0x4e, 0x89, 0xeb, 0x2a, 0xc5, 0xdf, 0x2f, 0xaf, 0x08, 0x32, 0xe5, 0xc9, 0xbb,
	0x76, 0x51, 0x55, 0xf0, 0x86, 0xde, 0x5b, 0x54, 0x93, 0x61, 0xb8, 0xd7, 0xae, 0x8f, 0xea, 0xe2,
	0xe8, 0x7a, 0x27, 0xa7, 0x01, 0xda, 0x12, 0x44, 0xdf, 0xf3, 0x5d, 0xd4, 0x90, 0x82, 0xae, 0x8f,
	0x40, 0x40, 0x67, 0x4e, 0xf7, 0x1c, 0x59, 0x82, 0xf7, 0xfa, 0xca, 0x75, 0x7d, 0xd4, 0x14, 0xe0,
	0xb9, 0xe7, 0x9f, 0xa0, 0xed, 0xd5, 0x60, 0xbb, 0x0e, 0xe9, 0xa1, 0xf0, 0xb0, 0x03, 0x35, 0xf5,
	0x91, 0x8b, 0x07, 0xdd, 0x53, 0xb7, 0x7b, 0x8e, 0x36, 0x64, 0x76, 0x4e, 0xbf, 0xaf, 0xf2, 0x27,
	0x8e, 0x37, 0x14, 0xf9, 0xcb, 0x00, 0xfb, 0x3d, 0x54, 0x39, 0x7c, 0x05, 0xdb, 0xa2, 0xb6, 0x51,
	0x3a, 0xd5, 0xf3, 0x64, 0x41, 0xfd, 0x8d, 0xe3, 0x05, 0xc2, 0xc7, 0x86, 0xb8, 0x0c, 0xfa, 0xce,
	0x3b, 0x71, 0x31, 0xc4, 0xa3, 0xfe, 0xe5, 0x30, 0x40, 0x9b, 0x9d, 0x7f, 0x0d, 0x68, 0x0e, 0xc4,
	0xcf, 0x65, 0xc8, 0xf2, 0xbb, 0x28, 0x64, 0xf8, 0x67, 0xa8, 0xeb, 0xb5, 0x88, 0x9f, 0xe8, 0x5f,
	0xc5, 0x47, 0x2b, 0x77, 0xef, 0xab, 0x35, 0x74, 0xb1, 0x5a, 0xb6, 0x2e, 0xe8, 0x2d, 0x93, 0x5b,
	0x0f, 0x96, 0x9d, 0xde, 0x7b, 0x38, 0xc4, 0xf8, 0xf5, 0x27, 0x66, 0xff, 0xd9, 0x23, 0x73, 0xa6,
	0x9d, 0x3e, 0x7f, 0xcc, 0xac, 0xbc, 0x1f, 0xbf, 0x78, 0xff, 0xfd, 0x34, 0x2a, 0x6e, 0xca, 0x71,
	0x3b, 0xcc, 0x92, 0x23, 0x36, 0x8e, 0xe2, 0x38, 0x4a, 0xa7, 0x47, 0xf2, 0xb7, 0xf9, 0x13, 0x67,
	0xf9, 0x1d, 0xcb, 0x8f, 0x66, 0xe3, 0x71, 0x4d, 0x6e, 0x8f, 0x57, 0xff, 0x07, 0x00, 0x00, 0xff,
	0xff, 0xc8, 0x84, 0x59, 0x45, 0x50, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PokerServiceClient is the client API for PokerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PokerServiceClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	MakePlay(ctx context.Context, in *Play, opts ...grpc.CallOption) (*TableStatus, error)
	TournamentStatus(ctx context.Context, in *TournamentStatusRequest, opts ...grpc.CallOption) (*TournamentStatusResponse, error)
}

type pokerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPokerServiceClient(cc grpc.ClientConnInterface) PokerServiceClient {
	return &pokerServiceClient{cc}
}

func (c *pokerServiceClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/auth.PokerService/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokerServiceClient) MakePlay(ctx context.Context, in *Play, opts ...grpc.CallOption) (*TableStatus, error) {
	out := new(TableStatus)
	err := c.cc.Invoke(ctx, "/auth.PokerService/MakePlay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokerServiceClient) TournamentStatus(ctx context.Context, in *TournamentStatusRequest, opts ...grpc.CallOption) (*TournamentStatusResponse, error) {
	out := new(TournamentStatusResponse)
	err := c.cc.Invoke(ctx, "/auth.PokerService/TournamentStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PokerServiceServer is the server API for PokerService service.
type PokerServiceServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	MakePlay(context.Context, *Play) (*TableStatus, error)
	TournamentStatus(context.Context, *TournamentStatusRequest) (*TournamentStatusResponse, error)
}

// UnimplementedPokerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPokerServiceServer struct {
}

func (*UnimplementedPokerServiceServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedPokerServiceServer) MakePlay(ctx context.Context, req *Play) (*TableStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakePlay not implemented")
}
func (*UnimplementedPokerServiceServer) TournamentStatus(ctx context.Context, req *TournamentStatusRequest) (*TournamentStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TournamentStatus not implemented")
}

func RegisterPokerServiceServer(s *grpc.Server, srv PokerServiceServer) {
	s.RegisterService(&_PokerService_serviceDesc, srv)
}

func _PokerService_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.PokerService/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PokerService_MakePlay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Play)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).MakePlay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.PokerService/MakePlay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).MakePlay(ctx, req.(*Play))
	}
	return interceptor(ctx, in, info, handler)
}

func _PokerService_TournamentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TournamentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).TournamentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.PokerService/TournamentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).TournamentStatus(ctx, req.(*TournamentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PokerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.PokerService",
	HandlerType: (*PokerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _PokerService_Connect_Handler,
		},
		{
			MethodName: "MakePlay",
			Handler:    _PokerService_MakePlay_Handler,
		},
		{
			MethodName: "TournamentStatus",
			Handler:    _PokerService_TournamentStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "poker.proto",
}
